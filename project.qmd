---
title: "Project: Group 3"
author: "EL Ghali DEBBAGH and Victoria SEMINA Project"
format: html
editor: visual
---

```{r}
#| message: false
here::i_am("project.Rproj")
library(here)
library(vroom)
library(dplyr)
library(tidyr)
library(ggplot2)
```

## Data Cleaning

```{r}
FAO <- vroom("FAO.csv")
```

```{r}
#First of all, we had a problem with the FAO database because some years in column 'Year' were written as an interval, e.g. 2014 was written as 2013-2015. This problem actually comes from the original FAO website's database description, where years are written as following 2022/2021-2023. So first of all we figured out this issue.


FAO$Year <- ifelse(grepl("\\d{4}-(\\d{4})", FAO$Year), sub("(\\d{4})-(\\d{4})", "\\1", FAO$Year) %>% as.numeric() + 1, FAO$Year)

```

```{r}
# Then we had a need to delete the 'Year code column' since we already have a column year
FAO_test<-
FAO |> select(-`Year Code`)


```

```{r}
#After that, we use 'pivot wider' to put our indicators in columns to get our cleaned first table

FAO_widetest<- FAO_test |> pivot_wider(names_from = Item, values_from = Value, id_cols =c('Year', 'Area'))
```

```{r}

WB<- vroom("WB.csv")

```
#Now we are looking at the table from the World Bank. The initial problem there was the fact that years were written in columns instead of lines. That's why we decided to use 'pivot longer' to put years in lines (to combine after with the first table)
WB_longtest<-WB|>pivot_longer(!(`Country Name` | `Country Code` |`Series Name` |`Series Code`))

```
```{r}
#Here we need to name the new column with years as 'Year'
WB_longtest <- WB_longtest |> rename("Year"="name")
```

```{r}
# In the World Bank database some missing values were automatically replaced by ".." In order not to get any problems with working with tables we replace such missed values with NA
WB_longtest[WB_longtest==".."]<- NA
```

```{r}
# After cleaning this, we faced with the another problem with  year columns where years were written as 2014[YR2014]. However, we need to have only the year insteasm so we deleted these brackets for every year 
WB_longtest$Year <- gsub("\\[.*\\]", "", WB_longtest$Year)
```
```{r}
#After that, we use 'pivot wider' to put our indicators in columns to get our cleaned second table
WB_wide <- WB_longtest |>
  pivot_wider(
    names_from = `Series Name`,
    values_from = value,
    id_cols = c('Year', 'Country Name'),
    values_fn = list
  )

```
```{r}
#Summary of the first table
num_rows <- nrow(FAO_widetest)
num_cols <- ncol(FAO_widetest)

missing_values <- colSums(is.na(FAO_widetest))

summary_table <- data.frame(
  Number_of_rows = num_rows,
  Number_of_columns = num_cols,
  Number_of_missing_values = missing_values
)


knitr::kable(summary_table)
```

```{r}
#Summary of the second table

num_rows_wide <- nrow(WB_wide)
num_cols_wide <- ncol(WB_wide)

missing_values_wide <- colSums(is.na(WB_wide))


summary_table_wide <- data.frame(
  Number_of_rows = num_rows_wide,
 Number_of_columns = num_cols_wide,
  Number_of_missing_values = missing_values_wide
)

knitr::kable(summary_table_wide)

```
